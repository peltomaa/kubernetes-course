name: Deploy

on: workflow_dispatch

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  BRANCH: ${{ github.ref_name }}
  SOPS_AGE_KEY: ${{ secrets.DECRYPTION_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GKE_SA_KEY }}"

      - uses: google-github-actions/setup-gcloud@v2
        with:
          install_components: "kubectl"

      - uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: "${{ env.GKE_CLUSTER }}"
          project_id: "${{ env.PROJECT_ID }}"
          location: "${{ env.GKE_ZONE }}"

      - name: "Config docker"
        run: gcloud --quiet auth configure-docker europe-north1-docker.pkg.dev

      - name: "Decrypt secrets"
        run: |-
          curl -O -L -C - https://github.com/mozilla/sops/releases/download/v3.7.3/sops-v3.7.3.linux
          sudo mv sops-v3.7.3.linux /usr/bin/sops
          sudo chmod +x /usr/bin/sops
          sops --decrypt crud-db/manifests/secrets.enc.yaml > crud-db/manifests/secrets.yaml

      - name: "Build crud app"
        run: docker build -t europe-north1-docker.pkg.dev/$PROJECT_ID/kubernetes-course/crud-app:$BRANCH-$GITHUB_SHA crud-app/

      - name: "Build crud backend"
        run: docker build -t europe-north1-docker.pkg.dev/$PROJECT_ID/kubernetes-course/crud-backend:$BRANCH-$GITHUB_SHA crud-backend/

      - name: "Build crud backend worker"
        run: docker build -t europe-north1-docker.pkg.dev/$PROJECT_ID/kubernetes-course/crud-backend-worker:$BRANCH-$GITHUB_SHA -f crud-backend/Dockerfile-worker crud-backend/

      - name: "Publish crud app"
        run: docker push europe-north1-docker.pkg.dev/$PROJECT_ID/kubernetes-course/crud-app:$BRANCH-$GITHUB_SHA

      - name: "Publish crud backend"
        run: docker push europe-north1-docker.pkg.dev/$PROJECT_ID/kubernetes-course/crud-backend:$BRANCH-$GITHUB_SHA
      - name: "Publish crud backend worker"
        run: docker push europe-north1-docker.pkg.dev/$PROJECT_ID/kubernetes-course/crud-backend-worker:$BRANCH-$GITHUB_SHA

      - name: "Set main namespace"
        if: github.ref == 'refs/heads/main'
        run: kubectl config set-context --current --namespace=crud

      - name: "Create feature branch namespace"
        if: github.ref != 'refs/heads/main'
        run: |-
          kubectl config set-context --current --namespace=crud-${GITHUB_REF#refs/heads/}
          kubectl create namespace crud-${GITHUB_REF#refs/heads/} || true
          cd crud-db
          kustomize edit set namespace crud-${GITHUB_REF#refs/heads/}
          cd ..
          cd crud-app
          kustomize edit set namespace crud-${GITHUB_REF#refs/heads/}
          cd ..
          cd crud-backend
          kustomize edit set namespace crud-${GITHUB_REF#refs/heads/}

      - name: "Setup crud databases"
        run: |-
          cd crud-db
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment
          kubectl get services -o wide

      - name: "Deploy crud app"
        run: |-
          cd crud-app
          kustomize edit set image crud/app=europe-north1-docker.pkg.dev/$PROJECT_ID/kubernetes-course/crud-app:$BRANCH-$GITHUB_SHA
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment
          kubectl get services -o wide

      - name: "Deploy crud backend"
        run: |-
          cd crud-backend
          kustomize edit set image crud/backend=europe-north1-docker.pkg.dev/$PROJECT_ID/kubernetes-course/crud-backend:$BRANCH-$GITHUB_SHA
          kustomize edit set image crud/backend-worker=europe-north1-docker.pkg.dev/$PROJECT_ID/kubernetes-course/crud-backend-worker:$BRANCH-$GITHUB_SHA
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment
          kubectl get services -o wide
